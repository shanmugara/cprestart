---
#- name: Debug print etcd path
#  debug:
#    msg: etcd path "{{ kube_manifests_backup_dir }}/{{ etcd_manifest | basename }}"
- name: Restart phase - etcd restart block
  tags: startetcd
  block:
  - name: Restart phase - restoring etcd manifest to {{ kube_manifests_dir }}
    copy:
      remote_src: true
      src: "{{ kube_manifests_backup_dir }}/etcd.yaml"
      dest: "{{ kube_manifests_dir }}"

  - name: Restart phase - getting etcd manifest file path
    set_fact:
      etcd_manifest: "{{ kube_manifests_dir }}/etcd.yaml"

  - name: Restart phase - reading manifest file {{ etcd_manifest }}
    shell:
      cmd: "cat {{ etcd_manifest }}"
    register: manifest

  - name: Restart phase - getting static_pod name from manifest file {{ etcd_manifest }}
    set_fact:
      etcd_pod_name: "{{ manifest_yaml.metadata.name }}-{{ inventory_hostname }}"
    vars:
      manifest_yaml: "{{ manifest.stdout | from_yaml }}"

  - name: Restart phase - getting pod ready status for {{ etcd_pod_name }} block
    block:
    - name: Restart phase - getting pod ready status for {{ etcd_pod_name }}
      shell:
        cmd: sudo crictl pods --name ^{{ etcd_pod_name }}$ --state ready -q
      register: result
      until: "result is not failed"
      retries: "{{ retry_count }}"
      delay: "{{ retry_delay }}"
      changed_when: result.stdout_lines[0]
    when: cri == 'containerd'
