---
- name: Stop phase - stop kubernetes api and manager pods block
  tags: stopcp
  block:
    - name: Stop phase - reading manifest {{ item }}
      shell:
        cmd: "cat {{ item }}"
      register: manifest

    - name: Stop phase - getting static_pod name from manifest
      set_fact:
        pod_name: "{{ manifest_yaml.metadata.name }}-{{ inventory_hostname }}"
      vars:
        manifest_yaml: "{{ manifest.stdout | from_yaml }}"

    - name: Stop phase - fetching pod id for {{ pod_name }} block
      block:
      - name: Stop phase - fetching pod id for {{ pod_name }}
        shell:
          cmd: sudo crictl pods --name ^{{ pod_name }}$ --state ready -q
        register: pod_id
        changed_when: "pod_id is not failed"
      when: cri == 'containerd'

    - name: Stop phase - fetching container id for {{ pod_name }} block
      block:
      - name: Stop phase - fetching container id for {{ pod_name }}
        shell:
          cmd: 'sudo docker container ls -f name=k8s_POD_{{ pod_name }} -q'
        register: container_id
        changed_when: "container_id is not failed"
      when: cri == 'docker'

    - name: Stop phase - removing pod {{ pod_name }} from {{ item | dirname }}
      file:
        path: "{{ item }}"
        state: absent

    - name: Stop phase - waiting for pod {{ pod_name }} to stop block
      block:
      - name: Stop phase - waiting for pod {{ pod_name }} to stop
        shell:
          cmd: sudo crictl ps --state running -p {{ pod_id.stdout_lines[0] }} --no-trunc
        register: results
        until: results.stdout.find(pod_id.stdout_lines[0][:13]) == -1
        retries: "{{ retry_count }}"
        delay: "{{ retry_delay }}"
      when: cri == 'containerd'

    - name: Stop phase - waiting for container {{ pod_name }} to stop block
      block:
      - name: Stop phase - waiting for container {{ pod_name }} to stop
        shell:
          cmd: 'sudo docker container ls -f name={{ container_id.stdout_lines[0] }} -q'
        register: results
        until: results.stdout_lines|length  == 0
        retries: "{{ retry_count }}"
        delay: "{{ retry_delay }}"
      when: cri == 'docker'
